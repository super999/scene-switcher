"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.openSceneMain = openSceneMain;
exports.openSceneGame = openSceneGame;
exports.showAllScenes = showAllScenes;
exports.printAllScenesV2 = printAllScenesV2;
exports.getAllScenes = getAllScenes;
exports.getAllScenesV2 = getAllScenesV2;
exports.QuerySceneUuid = QuerySceneUuid;
// 切换到 Main 场景
async function openSceneMain() {
    const sceneName = 'main.scene';
    let uuid = await QuerySceneUuid(sceneName);
    await Editor.Message.request('scene', 'open-scene', uuid);
    console.log(`Scene Switcher: 已切换到场景 ${sceneName}`);
}
// 切换到 Game 场景
async function openSceneGame() {
    const sceneName = 'game.scene';
    let uuid = await QuerySceneUuid(sceneName);
    await Editor.Message.request('scene', 'open-scene', uuid);
    console.log(`Scene Switcher: 已切换到场景 ${sceneName}`);
}
async function showAllScenes() {
    const scenes = await getAllScenes();
    if (!Array.isArray(scenes) || scenes.length === 0) {
        console.log('No scenes found.');
        return;
    }
    console.log('Available Scenes:');
    scenes.forEach(scene => {
        console.log(`showAllScenes - ${scene.name} (${scene.path})`);
    });
}
async function printAllScenesV2() {
    const scenes = await getAllScenesV2();
    if (!Array.isArray(scenes) || scenes.length === 0) {
        console.log('No scenes found.');
        return;
    }
    console.log('Available Scenes (v2):');
    scenes.forEach(scene => {
        console.log(`printAllScenesV2 - name:${scene.name}, path:(${scene.path}), type: ${scene.type}`);
    });
}
// 获取所有场景（异步）
async function getAllScenes() {
    let assets = [];
    try {
        assets = await Editor.Message.request('asset-db', 'query-assets', {
            // @ts-ignore
            type: 'scene'
        });
    }
    catch (e) {
        console.error('Failed to query scenes:', e);
        return assets;
    }
    console.log('Assets:', assets);
    return assets;
}
async function getAllScenesV2() {
    let assets = [];
    try {
        assets = await Editor.Message.request('asset-db', 'query-assets', { ccType: 'cc.SceneAsset' });
    }
    catch (e) {
        console.error('Failed to query scenes:', e);
        return assets;
    }
    return assets;
}
async function QuerySceneUuid(sceneName) {
    const scenes = await getAllScenesV2();
    const scene = scenes.find(s => s.name === sceneName);
    let find_asset = undefined;
    if (!scene) {
        // 打印所有 scenes
        for (const s of scenes) {
            console.log(`Available Scene: name: ${s.name}, display: ${s.displayName}, path: (${s.path})`);
            console.log(`scene info: ${JSON.stringify(s, null, 2)}`);
        }
        // 如果没有找到指定的场景，抛出错误 
        throw new Error(`Scene "${sceneName}" not found.`);
    }
    return scene.uuid;
}
//# sourceMappingURL=data:application/json;base64,